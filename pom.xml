<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.microsoft.azure</groupId>
    <artifactId>kafka-sink-azure-kusto</artifactId>
    <packaging>jar</packaging>
    <description>A Kafka Connect plugin for Azure Data Explorer (Kusto) Database</description>
    <version>5.1.0</version>
    <properties>
        <!-- Compile dependencies -->
        <az.core.version>1.55.5</az.core.version>
        <az.identity.version>1.16.3</az.identity.version>
        <az.core.http.netty.version>1.15.13</az.core.http.netty.version>
        <commoncodec.version>1.19.0</commoncodec.version>
        <commonio.version>2.20.0</commonio.version>
        <json.smart.version>2.6.0</json.smart.version>
        <kusto.sdk.version>7.0.2</kusto.sdk.version>
        <kafka.version>4.0.0</kafka.version>
        <msal4j.version>1.22.0</msal4j.version>
        <!-- Test dependencies -->
        <avro.random.generator.version>0.4.1</avro.random.generator.version>
        <awaitility.version>4.3.0</awaitility.version>
        <jsonassert.version>1.5.3</jsonassert.version>
        <junit.version>5.11.0</junit.version>
        <mockito.version>5.18.0</mockito.version>
        <testcontainer.version>1.21.3</testcontainer.version>
        <!-- Provided dependencies -->
        <kafka.connect.avro.converter.version>8.0.0</kafka.connect.avro.converter.version>
        <!-- Plugin dependencies -->
        <dependency-check-maven.version>12.1.3</dependency-check-maven.version>
        <extra.enforcer.rules.version>1.10.0</extra.enforcer.rules.version>
        <formatter.version>2.27.0</formatter.version>
        <spotless.version>2.41.1</spotless.version>
        <maven.enforcer.plugin.version>3.6.1</maven.enforcer.plugin.version>
        <mvn.assembly.plugin.version>3.7.1</mvn.assembly.plugin.version>
        <mvn.compiler.plugin.version>3.14.0</mvn.compiler.plugin.version>
        <mvn.failsafe.plugin.version>3.5.3</mvn.failsafe.plugin.version>
        <mvn.surefire.plugin.version>3.0.0</mvn.surefire.plugin.version>
        <plexus.version>4.0.2</plexus.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <source.java.version>21</source.java.version>
        <!-- Shade plugin -->
        <maven.shade.plugin.version>3.6.0</maven.shade.plugin.version>
        <kusto.shade.prefix>kusto_kafka_connector_shaded</kusto.shade.prefix>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${mvn.assembly.plugin.version}</version>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.microsoft.azure.kusto.kafka.connect.sink.KustoSinkConnector</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mvn.compiler.plugin.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>-Xlint:deprecation</arg>
                    </compilerArgs>
          <release>21</release>
                </configuration>
                <executions>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <compilerArgs>
                                <arg>-Xlint:deprecation</arg>
                                <arg>-Xlint:unchecked</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-maven-plugin</artifactId>
                <version>0.12.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>kafka-connect</goal>
                        </goals>
                        <configuration>
                            <title>Kafka Connect Azure Data Explorer (Kusto) Sink Connector</title>
                            <version>${project.version}</version>
                            <ownerUsername>microsoftcorporation</ownerUsername>
                            <ownerName>Microsoft Corporation</ownerName>
                            <componentTypes>
                                <componentType>sink</componentType>
                            </componentTypes>
                            <tags>
                                <tag>Azure</tag>
                                <tag>Kusto</tag>
                                <tag>Azure Data Explorer</tag>
                                <tag>Database</tag>
                                <tag>Sink</tag>
                                <tag>Kafka Connect</tag>
                            </tags>
                            <confluentControlCenterIntegration>true</confluentControlCenterIntegration>
                            <supportProviderName>Microsoft</supportProviderName>
                            <supportUrl>https://github.com/Azure/kafka-sink-azure-kusto/issues</supportUrl>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${mvn.failsafe.plugin.version}</version>
                <configuration>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.execution.parallel.enabled = true
                            junit.jupiter.execution.parallel.mode.default = concurrent
                        </configurationParameters>
                    </properties>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*KustoSinkIT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>${formatter.version}</version>
                <configuration>
                    <configFile>${project.basedir}/formatter.xml</configFile>
                    <encoding>UTF-8</encoding>
                    <lineEnding>KEEP</lineEnding>
                </configuration>
            </plugin>
            <!-- Makes it easier to have consist import order -->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <configuration>
                    <java>
                        <importOrder/>
                        <removeUnusedImports/>
                    </java>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-build-rules</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>org.slf4j:slf4j-log4j12</exclude>
                                        <exclude>log4j:log4j</exclude>
                                    </excludes>
                                </bannedDependencies>
                                <!--dependencyConvergence/-->
                                <requireJavaVersion>
                                    <version>[${source.java.version},)</version>
                                    <message>
                                        At least JDK ${source.java.version} is required to build this project because of Spark 3.4/3.5 being built with JDK11 now.
                                    </message>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>[3.9.0,)</version>
                                    <message>
                                        At least Maven 3.9.0 is required to build this project.
                                    </message>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>${extra.enforcer.rules.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <relocations>
                                <relocation>
                                    <pattern>io.netty</pattern>
                                    <shadedPattern>${kusto.shade.prefix}_netty.io.netty</shadedPattern>
                                </relocation>
                                <!-- COM -->
                                <relocation>
                                    <pattern>com.microsoft.azure</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.microsoft.azure</shadedPattern>
                                    <excludes>
                                        <exclude>com.microsoft.azure.kusto.kafka.connect.sink.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.kafka.connect.sink.format.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.kafka.connect.sink.formatWriter.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.data.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.data.auth.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.data.exceptions.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.data.format.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.data.http.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.data.instrumentation.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.ingest.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.ingest.exceptions.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.ingest.resources.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.ingest.result.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.ingest.source.*</exclude>
                                        <exclude>com.microsoft.azure.kusto.ingest.utils.*</exclude>
                                    </excludes>
                                </relocation>
                                <relocation>
                                    <pattern>com.azure.xml</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.microsoft.xml</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.google</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.google</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.univocity.parsers</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.univocity.parsers</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.nimbusds</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.nimbusds</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.microsoft.spark</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.microsoft.spark</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.microsoft.aad</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.microsoft.aad</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.azure.storage</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.azure.storage</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.azure.security</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.azure.security</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.azure.json</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.azure.json</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.azure.identity</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.azure.identity</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.azure.data</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.azure.data</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.azure.core</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.azure.core</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.thoughtworks.paranamer</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.thoughtworks.paranamer</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.sun.jna</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.sun.jna</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.nimbusds.openid</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.nimbusds.openid</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.nimbusds.oauth2</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.nimbusds.oauth2</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.nimbusds.jwt</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.nimbusds.jwt</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.nimbusds.jose</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.nimbusds.jose</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.nimbusds.common</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.nimbusds.common</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.google.common</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.google.common</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.fasterxml.jackson.module</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.fasterxml.jackson.module</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.fasterxml.jackson.datatype</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.fasterxml.jackson.datatype</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.fasterxml.jackson.dataformat</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.fasterxml.jackson.dataformat</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.fasterxml.jackson.databind</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.fasterxml.jackson.databind</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.fasterxml.jackson.core</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.fasterxml.jackson.core</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.fasterxml.jackson.annotation</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.fasterxml.jackson.annotation</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.ctc.wstx</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.com.ctc.wstx</shadedPattern>
                                </relocation>
                                <!-- ORG -->
                                <relocation>
                                    <pattern>org.slf4j</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.org.slf4j</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.reactivestreams</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.org.reactivestreams</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.objectweb</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.org.objectweb</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.jetbrains</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.org.jetbrains</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.codehaus</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.org.codehaus</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.http</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.org.apache.http</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.common</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.org.apache.common</shadedPattern>
                                </relocation>
                                <!-- IO -->
                                <relocation>
                                    <pattern>io.vavr</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.io.vavr</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>io.github</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.io.github</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>net.minidev</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.net.minidev</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>net.jcip</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.net.jcip</shadedPattern>
                                </relocation>
                                <!-- Reactor -->
                                <relocation>
                                    <pattern>reactor.util</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.reactor.util</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>reactor.netty</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.reactor.netty</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>reactor.adapter</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.reactor.adapter</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>reactor.core</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.reactor.core</shadedPattern>
                                </relocation>
                                <!-- JAVAX -->
                                <relocation>
                                    <pattern>javax.annotation</pattern>
                                    <shadedPattern>${kusto.shade.prefix}.javax.annotation</shadedPattern>
                                </relocation>
                            </relocations>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>module-info.class</exclude>
                                        <exclude>META-INF/services/javax.annotation.processing.Processor</exclude>
                                        <exclude>META-INF/*.MF</exclude>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>commons-logging:commons-logging</artifact>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </filter>
                            </filters>
                            <transformers>
                                <!-- prevents apache license duplication -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer"/>
                                <!-- Some licenses (including the Apache License, Version 2)
                                require that notices are preserved by downstream distributors.
                                ApacheNoticeResourceTransformer automates the assembly of an appropriate NOTICE. -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                                    <addHeader>false</addHeader>
                                </transformer>
                                <!-- The PropertiesTransformer allows a set of properties files to be merged
                                and to resolve conflicts based on an ordinal giving the priority of each file.
                                An optional alreadyMergedKey enables to have a boolean flag in the file which,
                                if set to true, request to use the file as it as the result of the merge.
                                If two files are considered complete in the merge process then the shade will fail.-->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.properties.PropertiesTransformer">
                                    <!-- required configuration -->
                                    <!-- merges all netty lib version files into one file -->
                                    <resource>META-INF/io.netty.versions.properties</resource>
                                    <ordinalKey>ordinal</ordinalKey>
                                    <!-- optional configuration -->
                                    <alreadyMergedKey>already_merged</alreadyMergedKey>
                                    <defaultOrdinal>0</defaultOrdinal>
                                    <reverseOrder>false</reverseOrder>
                                </transformer>
                                <!-- this handles and properly merges the content of META-INF/services in the dependencies -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <!-- once 3.3.0 shade plugin is release upgrade the maven plugin and remove AppendingTransformer
                                        https://issues.apache.org/jira/browse/MSHADE-371 -->
                                    <resource>META-INF/NOTICE.md</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <!-- once 3.3.0 shade plugin is release upgrade the maven plugin and remove AppendingTransformer
                                    https://issues.apache.org/jira/browse/MSHADE-371 -->
                                    <resource>META-INF/LICENSE.md</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.microsoft.azure.kusto.kafka.connect.sink.KustoSinkConnector</mainClass>
                                </transformer>
                            </transformers>
                            <!-- When true, it will attempt to shade the contents of the java source files when creating the sources jar. -->
                            <shadeSourcesContent>true</shadeSourcesContent>
                            <minimizeJar>true</minimizeJar>
                            <finalName>kafka-sink-azure-kusto-${project.version}-jar-with-dependencies</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openrewrite.maven</groupId>
                <artifactId>rewrite-maven-plugin</artifactId>
                <version>6.15.0</version>
                <configuration>
                    <exportDatatables>true</exportDatatables>
                    <activeRecipes>
                        <recipe>org.openrewrite.java.migrate.UpgradeToJava21</recipe>
                    </activeRecipes>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.openrewrite.recipe</groupId>
                        <artifactId>rewrite-migrate-java</artifactId>
                        <version>3.14.1</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
    <name>Kafka Connect Azure Data Explorer (Kusto) Sink</name>
    <licenses>
        <license>
            <name>The MIT License (MIT)</name>
            <url>http://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <url>https://github.com/Azure/kafka-sink-azure-kusto</url>
        <connection>scm:git://github.com/Azure/kafka-sink-azure-kusto.git</connection>
    </scm>
    <developers>
        <developer>
            <id>microsoft</id>
            <name>Microsoft</name>
        </developer>
    </developers>
    <dependencies>
        <dependency>
            <groupId>com.microsoft.azure.kusto</groupId>
            <artifactId>kusto-data</artifactId>
            <version>${kusto.sdk.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.azure</groupId>
                    <artifactId>azure-identity</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.minidev</groupId>
                    <artifactId>json-smart</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.azure</groupId>
                    <artifactId>azure-core-http-netty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.microsoft.azure</groupId>
                    <artifactId>msal4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure.kusto</groupId>
            <artifactId>kusto-ingest</artifactId>
            <version>${kusto.sdk.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.azure</groupId>
                    <artifactId>azure-identity</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.minidev</groupId>
                    <artifactId>json-smart</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.azure</groupId>
                    <artifactId>azure-core-http-netty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.microsoft.azure</groupId>
                    <artifactId>msal4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-identity</artifactId>
            <version>${az.identity.version}</version>
        </dependency>
        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>${json.smart.version}</version>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-core-http-netty</artifactId>
            <version>${az.core.http.netty.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>io.projectreactor.netty</groupId>
                    <artifactId>reactor-netty-http</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty-http</artifactId>
            <version>1.2.8</version>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>msal4j</artifactId>
            <version>${msal4j.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commoncodec.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commonio.version}</version>
        </dependency>
        <!-- Provided scopes -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-json</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-avro-converter</artifactId>
            <version>${kafka.connect.avro.converter.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-runtime</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Test scopes -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainer.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.confluent.avro</groupId>
            <artifactId>avro-random-generator</artifactId>
            <version>${avro.random.generator.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainer.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>${testcontainer.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>${jsonassert.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>jitpack</id>
            <url>https://jitpack.io</url>            
        </repository>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
        <repository>
            <id>maven_central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
    </repositories>
</project>
